<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="com.fun.likechat.persistence.mapper.AccountDetailMapper">
	<!-- 根据情况定制属性列表
	<resultMap id="RM.AccountDetail" type="com.fun.likechat.po.AccountDetail">
		<result property="id" column="id"/>
		<result property="actorId" column="actor_id"/>
		<result property="openId" column="open_id"/>
		<result property="payType" column="pay_type"/>
		<result property="goodsType" column="goods_type"/>
		<result property="goodsId" column="goods_id"/>
		<result property="goodsCode" column="goods_code"/>
		<result property="money" column="money"/>
		<result property="outTradeNo" column="out_trade_no"/>
		<result property="tradeNo" column="trade_no"/>
		<result property="payer" column="payer"/>
		<result property="payee" column="payee"/>
		<result property="state" column="state"/>
		<result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
	</resultMap>
	-->

	<!-- 查询公用抽取的列 -->
	<sql id="columns_all">
	    <![CDATA[
		id,actor_id,open_id,pay_type,goods_type,goods_id,goods_code,money,out_trade_no,trade_no,payer,payee,state,create_time,update_time
	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT IGNORE INTO t_account_detail (
        	id,
        	actor_id,
        	open_id,
        	pay_type,
        	goods_type,
        	goods_id,
        	goods_code,
        	money,
        	out_trade_no,
        	trade_no,
        	payer,
        	payee,
        	state,
        	create_time,
        	update_time
        ) VALUES (
        	#{id},
        	#{actorId},
        	#{openId},
        	#{payType},
        	#{goodsType},
        	#{goodsId},
        	#{goodsCode},
        	#{money},
        	#{outTradeNo},
        	#{tradeNo},
        	#{payer},
        	#{payee},
        	#{state},
        	#{createTime},
        	#{updateTime}
        )
    ]]>
	</insert>

	<update id="update" parameterType="com.fun.likechat.persistence.po.AccountDetail">
        UPDATE t_account_detail 
		<set>
	        <if test="actorId != null">
	        	actor_id = #{actorId},
	        </if>
	        <if test="openId != null">
	        	open_id = #{openId},
	        </if>
	        <if test="payType != null">
	        	pay_type = #{payType},
	        </if>
	        <if test="goodsType != null">
	        	goods_type = #{goodsType},
	        </if>
	        <if test="goodsId != null">
	        	goods_id = #{goodsId},
	        </if>
	        <if test="goodsCode != null">
	        	goods_code = #{goodsCode},
	        </if>
	        <if test="money != null">
	        	money = #{money},
	        </if>
	        <if test="outTradeNo != null">
	        	out_trade_no = #{outTradeNo},
	        </if>
	        <if test="tradeNo != null">
	        	trade_no = #{tradeNo},
	        </if>
	        <if test="payer != null">
	        	payer = #{payer},
	        </if>
	        <if test="payee != null">
	        	payee = #{payee},
	        </if>
	        <if test="state != null">
	        	state = #{state},
	        </if>
	        <if test="createTime != null">
	        	create_time = #{createTime},
	        </if>
	        <if test="updateTime != null">
	        	update_time = #{updateTime}
	        </if>
	    </set>
        WHERE
	        id = #{id}
	</update>

	<delete id="deleteById">
        DELETE FROM t_account_detail WHERE
        id = #{id}
	</delete>

	<select id="getById" resultType="com.fun.likechat.persistence.po.AccountDetail">
		SELECT
			*
		FROM
			t_account_detail 
	    WHERE
	        id = #{id} 
	</select>

	<!-- 查询条件where,如果有时间范围查询，参数必须是startTime 和 endTime -->
	<sql id="where">
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="actorId != null">
				AND actor_id = #{actorId}
			</if>
			<if test="openId != null">
				AND open_id = #{openId}
			</if>
			<if test="payType != null">
				AND pay_type = #{payType}
			</if>
			<if test="goodsType != null">
				AND goods_type = #{goodsType}
			</if>
			<if test="goodsId != null">
				AND goods_id = #{goodsId}
			</if>
			<if test="goodsCode != null">
				AND goods_code = #{goodsCode}
			</if>
			<if test="money != null">
				AND money = #{money}
			</if>
			<if test="outTradeNo != null">
				AND out_trade_no = #{outTradeNo}
			</if>
			<if test="tradeNo != null">
				AND trade_no = #{tradeNo}
			</if>
			<if test="payer != null">
				AND payer = #{payer}
			</if>
			<if test="payee != null">
				AND payee = #{payee}
			</if>
			<if test="state != null">
				AND state = #{state}
			</if>
			<if test="startTime != null">
	       	<![CDATA[
				AND create_time >= #{startTime} 
			]]>
			</if>
			<if test="endTime != null">
			<![CDATA[
				AND create_time < #{endTime}
			]]>
			</if>
			<if test="updateTime != null">
				AND update_time = #{updateTime}
			</if>
		</where>
	</sql>
	
	<sql id="whereForPo">
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="actorId != null">
				AND actor_id = #{actorId}
			</if>
			<if test="openId != null">
				AND open_id = #{openId}
			</if>
			<if test="payType != null">
				AND pay_type = #{payType}
			</if>
			<if test="goodsType != null">
				AND goods_type = #{goodsType}
			</if>
			<if test="goodsId != null">
				AND goods_id = #{goodsId}
			</if>
			<if test="goodsCode != null">
				AND goods_code = #{goodsCode}
			</if>
			<if test="money != null">
				AND money = #{money}
			</if>
			<if test="outTradeNo != null">
				AND out_trade_no = #{outTradeNo}
			</if>
			<if test="tradeNo != null">
				AND trade_no = #{tradeNo}
			</if>
			<if test="payer != null">
				AND payer = #{payer}
			</if>
			<if test="payee != null">
				AND payee = #{payee}
			</if>
			<if test="state != null">
				AND state = #{state}
			</if>
		</where>
	</sql>	

	<select id="count" parameterType="java.util.Map" resultType="int">
		SELECT count(*) FROM t_account_detail
		<include refid="where" />
	</select>

	<select id="getListByMap" parameterType="java.util.Map" resultType="com.fun.likechat.persistence.po.AccountDetail">
		SELECT 
			*
		FROM
			t_account_detail 
	    <include refid="where" />
	    ${limit}
	</select>
	
	<select id="getListByPo" parameterType="com.fun.likechat.persistence.po.AccountDetail" resultType="com.fun.likechat.persistence.po.AccountDetail">
		SELECT 
			*
		FROM 
			t_account_detail 
	    <include refid="whereForPo" />
	</select>
</mapper>

